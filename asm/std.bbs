
.macro putchar n
    mov n, n
.end

.macro puts start, len
    .loop n, 0, len
        putchar start + WORD*n
    .end
.end

.macro copy num_bits, start, end
    .loop n, 0, num_bits
        mov start+n, end+n
    .end
.end

.macro mov a, b
    .raw a, b, next
next:
.end

.macro jmp addr
    .raw 0, 0, addr
.end

.macro out addr
    .raw addr, addr, next
next:
.end

.macro hlt
self:
    jmp self
.end 

.macro times n, word
    .loop m, 0, n
        .raw word
    .end
.end

.macros gap, n
    times n, 0
.end
