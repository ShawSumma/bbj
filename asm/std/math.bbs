
.include "bitwise.bbs"

.macro add out, lhs, rhs
    jmp enter
carry:
    .raw 0
shifted:
    .raw 0
enter:
    and carry, lhs, rhs
    xor out, lhs, rhs
loop:
    if_zero carry, done
    shl shifted, carry
    and carry, out, shifted
    xor out, out, shifted
    jmp loop
done:
.end

.macro sub out, lhs, rhs
    jmp next
tmp:
    .raw 1
next:
    not tmp, rhs
    inc tmp, tmp
    add out, lhs, tmp
.end

.macro inc low, high, out, arg
    jmp start
data:
    .raw 2
start:
    .loop n, low, high
        if_even arg+n, is_even
    is_odd:
        mov out+n, data+0
        jmp loop
    is_even:
        mov out+n, data+1
        jmp res
    loop:
    .end
    jmp res
done:
    copy 16, out, data+16
    copy 16, out+16, data+16
res:
.end

.macro inc out, arg
    inc 0, 32, out, arg
.end

.macro dec low, high, out, arg
    not out, arg
    inc low, high, out, out
    not out, arg
.end

.macro dec out, arg
    dec 0, 32, out, arg
.end

.macro load n, out, mem
    jmp over
iter:
    .raw 0
set_iter:
    .raw n-1
set_out:
    .raw out
over:
    copy 32, iter, set_iter
    copy 32, loc_mov, set_out
    copy 32, loc_mov+32, mem
loc_mov:
    mov 0, 0
    if_zero iter, end
    inc loc_mov, loc_mov
    inc loc_mov+32, loc_mov+32
    dec iter, iter
    jmp loc_mov
end:
.end

.macro store n, mem, in
    jmp over
iter:
    .raw 0
set_iter:
    .raw n-1
set_in:
    .raw in
over:
    copy 32, iter, set_iter
    copy 32, loc_mov, mem
    copy 32, loc_mov+32, set_in
loc_mov:
    mov 0, in
    if_zero iter, end
    inc loc_mov, loc_mov
    inc loc_mov+32, loc_mov+32
    dec iter, iter
    jmp loc_mov
end:
.end

.macro load a, b
    load 32, a, b
.end

.macro store a, b
    store 32, a, b
.end

.macro puts str
        copy chr_ptr, str
        jmp loop
    chr:
        .raw 0
    chr_ptr:
        .raw 0
    const_wordsize:
        .raw 32
    loop:
        load chr, chr_ptr
        if_zero chr, done
        putchar chr
        add chr_ptr, chr_ptr, const_wordsize
        jmp loop
    done:
.end
