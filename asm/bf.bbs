
.include "std/math.bbs"

tape:
    zeros 30000

pointer:
    .raw tape + 15000*32

unmatched:
    .raw 0

pc:
    .raw input
word:
    .raw 32
r0:
    .raw 0
input_write:
    .raw input

.macro x2 out, in
    add out, in, in
.end

.macro x32 out, in
    x2 out, in
    x2 out, out
    x2 out, out
    x2 out, out
    x2 out, out
.end

.macro debug op
    # putchar op
.end

comma:
    .raw ","
on_comma:
    debug comma
    getchar r0
    store pointer, r0
    jmp next

period:
    .raw "."
on_period:
    debug period
    load r0, pointer
    putchar r0
    jmp next

plus:
    .raw "+"
on_plus:
    debug plus
    load r0, pointer
    inc r0, r0
    store pointer, r0
    load r0, pointer
    jmp next

minus:
    .raw "-"
on_minus:
    debug minus
    load r0, pointer
    dec r0, r0
    store pointer, r0
    jmp next

lt:
    .raw "<"
on_lt:
    debug lt
    sub pointer, pointer, word
    jmp next

gt:
    .raw ">"
on_gt:
    debug gt
    add pointer, pointer, word
    jmp next

lb:
    .raw "["
on_lb:
    debug lb
    load r0, pointer
    if_zero r0, on_lb_loop
    jmp next
on_lb_loop:
    add pc, pc, word
    load r0, pc
    if_eq r0, rb, on_lb_found_rb
    if_eq r0, lb, on_lb_found_lb
    jmp on_lb_loop
on_lb_found_lb:
    inc unmatched, unmatched
    jmp on_lb_loop
on_lb_found_rb:
    dec unmatched, unmatched
    if_zero unmatched, next
    jmp on_lb_loop

rb:
    .raw "]"
on_rb:
    debug rb
    load r0, pointer
    if_zero r0, next
on_rb_loop:
    sub pc, pc, word
    load r0, pc
    if_eq r0, lb, on_rb_found_lb
    if_eq r0, rb, on_rb_found_rb
    jmp on_rb_loop
on_rb_found_rb:
    inc unmatched, unmatched
    jmp on_rb_loop
on_rb_found_lb:
    dec unmatched, unmatched
    if_zero unmatched, next
    jmp on_rb_loop

main:
    getchar r0
    store input_write, r0
    add input_write, input_write, word
    if_zero r0, next
    jmp main
next:
    load r0, pc
    add pc, pc, word
    if_zero r0, exit
    if_eq r0, comma, on_comma
    if_eq r0, period, on_period
    if_eq r0, plus, on_plus
    if_eq r0, minus, on_minus
    if_eq r0, lt, on_lt
    if_eq r0, gt, on_gt
    if_eq r0, lb, on_lb
    if_eq r0, rb, on_rb
    jmp next
exit:
    newline
    hlt

input:

